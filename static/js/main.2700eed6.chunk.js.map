{"version":3,"sources":["components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","props","useState","term","setTerm","className","onSubmit","event","preventDefault","onFormSubmit","type","value","onChange","target","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","key","id","videoId","VideoDetail","videoSrc","description","App","setVideos","selectedVideo","setSelectedVideo","useEffect","onTermSubmit","a","axios","get","params","q","part","maxResults","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"qOA2BeA,EAzBG,SAAAC,GAAU,IAAD,EACDC,mBAAS,IADR,mBAClBC,EADkB,KACZC,EADY,KAazB,OACE,yBAAKC,UAAU,yBACb,0BAAMC,SARW,SAAAC,GACnBA,EAAMC,iBAENP,EAAMQ,aAAaN,IAKaE,UAAU,WACtC,yBAAKA,UAAU,SACb,+CACA,2BAAOK,KAAK,OAAOC,MAAOR,EAAMS,SAflB,SAAAL,GACpBH,EAAQG,EAAMM,OAAOF,c,iBCYVG,G,MAfG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQV,UAAU,mBAClD,yBACEa,IAAKH,EAAMI,QAAQC,MACnBf,UAAU,WACVgB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEvC,yBAAKnB,UAAU,WACb,yBAAKA,UAAU,UAAUU,EAAMI,QAAQC,WCKhCK,EAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAeD,EAAOE,KAAI,SAAAb,GAC9B,OACE,kBAAC,EAAD,CACEc,IAAKd,EAAMe,GAAGC,QACdf,cAAeA,EACfD,MAAOA,OAKb,OAAO,yBAAKV,UAAU,2BAA2BsB,ICQpCK,EApBK,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,2CAGT,IAAMkB,EAAQ,wCAAoClB,EAAMe,GAAGC,SAE3D,OACE,6BACE,yBAAK1B,UAAU,YACb,4BAAQe,MAAM,eAAeC,IAAKY,KAEpC,yBAAK5B,UAAU,cACb,wBAAIA,UAAU,aAAaU,EAAMI,QAAQC,OACzC,2BAAIL,EAAMI,QAAQe,gBCsCXC,EAhDH,WAAO,IAAD,EACYjC,mBAAS,IADrB,mBACTwB,EADS,KACDU,EADC,OAE0BlC,mBAAS,MAFnC,mBAETmC,EAFS,KAEMC,EAFN,KAIhBC,qBAAU,WACRC,EAAa,eACZ,IAEH,IAEMA,EAAY,uCAAG,WAAMrC,GAAN,eAAAsC,EAAA,sEACIC,IAAMC,IAC3B,+CACA,CACEC,OAAQ,CACNC,EAAG1C,EACH2C,KAAM,UACNC,WAAY,EACZlB,IAVI,6CAES,OACbmB,EADa,OAanBZ,EAAUY,EAASC,KAAKC,OACxBZ,EAAiBU,EAASC,KAAKC,MAAM,IAdlB,2CAAH,sDAqBlB,OACE,yBAAK7C,UAAU,gBACb,kBAAC,EAAD,CAAWI,aAAc+B,IACzB,yBAAKnC,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAaU,MAAOsB,KAEtB,yBAAKhC,UAAU,oBACb,kBAAC,EAAD,CAAWW,cAbC,SAAAD,GACpBuB,EAAiBvB,IAYgCW,OAAQA,SC1C7DyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.2700eed6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst SearchBar = props => {\n  const [term, setTerm] = useState(\"\");\n\n  const onInputChange = event => {\n    setTerm(event.target.value);\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    props.onFormSubmit(term);\n  };\n\n  return (\n    <div className=\"search-bar ui segment\">\n      <form onSubmit={onFormSubmit} className=\"ui form\">\n        <div className=\"field\">\n          <label>Video Search</label>\n          <input type=\"text\" value={term} onChange={onInputChange} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import './VideoItem.css';\nimport React from 'react';\n\nconst VideoItem = ({ video, onVideoSelect }) => {\n  return (\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\n      <img\n        alt={video.snippet.title}\n        className=\"ui image\"\n        src={video.snippet.thumbnails.medium.url}\n      />\n      <div className=\"content\">\n        <div className=\"header\">{video.snippet.title}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport VideoItem from './VideoItem';\n\nconst VideoList = ({ videos, onVideoSelect }) => {\n  const renderedList = videos.map(video => {\n    return (\n      <VideoItem\n        key={video.id.videoId}\n        onVideoSelect={onVideoSelect}\n        video={video}\n      />\n    );\n  });\n\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\n};\n\nexport default VideoList;\n","import React from 'react';\n\nconst VideoDetail = ({ video }) => {\n  if (!video) {\n    return <div>Loading...</div>;\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n  return (\n    <div>\n      <div className=\"ui embed\">\n        <iframe title=\"video player\" src={videoSrc} />\n      </div>\n      <div className=\"ui segment\">\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoDetail;\n","import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport axios from \"axios\";\nimport VideoList from \"./VideoList\";\nimport VideoDetail from \"./VideoDetail\";\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  useEffect(() => {\n    onTermSubmit(\"buildings\");\n  }, []);\n\n  const KEY = \"AIzaSyBB1VjA1Qz31EN2S0cj9e-nH-ob_Lg-dcA\";\n\n  const onTermSubmit = async term => {\n    const response = await axios.get(\n      \"https://www.googleapis.com/youtube/v3/search\",\n      {\n        params: {\n          q: term,\n          part: \"snippet\",\n          maxResults: 5,\n          key: KEY\n        }\n      }\n    );\n\n    setVideos(response.data.items);\n    setSelectedVideo(response.data.items[0]);\n  };\n\n  const onVideoSelect = video => {\n    setSelectedVideo(video);\n  };\n\n  return (\n    <div className=\"ui container\">\n      <SearchBar onFormSubmit={onTermSubmit} />\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"eleven wide column\">\n            <VideoDetail video={selectedVideo} />\n          </div>\n          <div className=\"five wide column\">\n            <VideoList onVideoSelect={onVideoSelect} videos={videos} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}